#!/bin/bash

############################################################
#       Prj: Emmax pipeline
#       Assignment: main pipeline
#       Author: Shawn Wang
#       Date: Apr 26 2023
############################################################

# ## getopts
set -e ## 报错打断，防止一直错下去
# 
shopt -s expand_aliases
source ~/.bash_alias
# 
start_time=$(date +%s)

## 帮助内容
func(){
    echo -e "\033[32m\n-------------------------------\n\033[0m"
    echo -e "\033[32;1mEmmax pipeline . Haplotype analysis.\033[0m"
    echo -e "\033[32m\n-------------------------------\n\033[0m"
    echo -e "\033[32;1mUsage: \n\033[0m"
    echo -e "\033[35mmake_nj_tree \ \n \033[31m-v [vcf] \ \n \033[31m-r [regions]\ \n \033[31m-o [output] \033[0m"
    echo -e "\033[32m\n-------------------------------\n\033[0m"
    echo -e "\033[32mAuthor\033[0m Shawn Wang (shawnwang2016@126.com)"
    echo -e "\033[32mDate\033[0m Tue May 16, 2023"
    echo -e "\033[32mVersion\033[0m V.0.0.0.99 beta"
    echo -e "\033[32m\n-------------------------------\n\033[0m"
    echo -e "\033[32;1mRequired parameters:\n\033[0m"
    echo -e "\033[31;3m[-v]:vcf_file\033[0m,   Only accept vcf.gz file\033[0m"
    echo -e "\033[31;3m[-r]:regions\033[0m,  target region,chr:start-end, eg:1:10000-20000\033[0m"
    echo -e "\033[31;3m[-o]:gwasfile\033[0m,  .gwas file generated by emmax-down\033[0m"
    echo -e "\033[31;3m[-o]:famfile\033[0m,  .fam file generated by plink\033[0m"
    echo -e "\033[31;3m[-o]:output\033[0m,  prefix of output filename\033[0m"
    echo -e "\033[32m\n-------------------------------\n\033[0m"
    exit -1
}


## 默认值
while getopts 'ht:v:r:o::g:f:' OPT;
do
    case $OPT in
        v) vcf=`echo "$OPTARG"`;;
        r) regions=`echo "$OPTARG"`;;
        g) gwasfile=`echo "$OPTARG"`;;
        f) famfile=`echo "$OPTARG"`;;
        o) output=`echo "$OPTARG"`;;
        h) func
           exit 1
           ;;
        ?) func
           exit 1
           ;;
    esac
done

## 设置默认参数
if [ -z "$vcf" ]; then echo -e "\033[31m\nERROR:\033[0m need [-v]:vcf parameter,   need vcf.gz file\033[0m"; exit 1; fi
if [ -z "$regions" ]; then echo -e "\033[31m\nERROR:\033[0m need [-r]:regions parameter,  target region,chr:start-end, eg:1:10000-20000\033[0m"; exit 1; fi
if [ -z "$gwasfile" ]; then echo -e "\033[31m\nERROR:\033[0m need [-g]:gwasfile parameter,   need .gwas file\033[0m"; exit 1; fi
if [ -z "$famfile" ]; then echo -e "\033[31m\nERROR:\033[0m need [-f]:famfile parameter,   need .fam file\033[0m"; exit 1; fi
if [ -z "$output" ]; then output="tmp"; fi
## 提示你的参数设置
echo -e "\033[32m\n=====================\033[1m \033[34mYour setting \033[0m \033[32m=====================\033[0m"
echo -e "\033[32mInput vcf file: \033[0m ${vcf}"
echo -e "\033[32mInput target region :\033[0m  ${regions}"
echo -e "\033[32mInput .gwas file :\033[0m  ${gwasfile}"
echo -e "\033[32mInput .fam file :\033[0m  ${famfile}"
echo -e "\033[32moutput prefix :\033[0m  ${output}"
echo -e "\033[32m=========================================================\033[0m"


echo -e "\033[32m\n==================================================== \033[0m\033[34m\nStep1 extract targeted vcf .... \033[0m\n\033[32m====================================================\n\033[0m"
##> 第一步，bcftools 提取指定范围vcf文件
if [ -f ${output}.vcf.gz ] 
then
  echo -e "\033[34mSkip step1, using previous analysis results. \033[0m"
else
  bcftools filter ${vcf} --regions ${regions} -o ${output}.vcf
  bgzip ${output}.vcf
  bcftools index -t ${output}.vcf.gz
fi
  
echo -e "\033[32m\n==================================================== \033[0m\033[34m\nStep2 extract targeted vcf .... \033[0m\n\033[32m====================================================\n\033[0m"
##> 第二步，将vcf文件转换为phylip格式

if [ -f ${output}.phy ] 
then
  echo -e "\033[34mSkip step2, using previous analysis results. \033[0m"
else
  run_pipeline.pl  -Xmx100G -importGuess  ${output}.vcf.gz -ExportPlugin -saveAs ${output}.phy -format Phylip_Inter
fi
echo -e "\033[32m\n==================================================== \033[0m\033[34m\nStep3 construct NJ tree .... \033[0m\n\033[32m====================================================\n\033[0m"
##> 第三步，通过fasttree构建进化树

if [ -f ${output}.phy ] 
then
  echo -e "\033[34mSkip step3, using previous analysis results. \033[0m"
else
  fasttree -nt -gtr ${output}.phy >${output}.nwk
fi

echo -e "\033[32m\n==================================================== \033[0m\033[34m\nFinish! \033[0m\n\033[32m====================================================\n\033[0m"

if [ -f ${output}.rds ]
then
  echo -e "\033[34mSkip step3, using previous analysis results. \033[0m"
else
  hapHeatmap -t ${output}.nwk -g ${gwasfile} -f ${famfile} -r ${regions}
fi
